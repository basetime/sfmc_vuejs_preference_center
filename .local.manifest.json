{
  "instanceDetails": {
    "instance": "Avagate",
    "parentMID": "534001218",
    "activeMID": "534001218"
  },
  "contentBuilder": {
    "folders": [
      {
        "id": 103522,
        "name": "Basetime Preference Center",
        "parentId": 35088,
        "categoryType": "asset",
        "rootFolder": true,
        "folderPath": "Content Builder/Basetime Preference Center"
      },
      {
        "id": 103523,
        "name": "backend",
        "parentId": 103522,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/backend"
      },
      {
        "id": 103524,
        "name": "configurations",
        "parentId": 103522,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/configurations"
      },
      {
        "id": 103525,
        "name": "frontend",
        "parentId": 103522,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/frontend"
      },
      {
        "id": 103987,
        "name": "lib",
        "parentId": 103522,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/lib"
      },
      {
        "id": 103526,
        "name": "components",
        "parentId": 103525,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/frontend/components"
      },
      {
        "id": 103975,
        "name": "styles",
        "parentId": 103525,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/frontend/styles"
      },
      {
        "id": 103988,
        "name": "ssjs",
        "parentId": 103987,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/lib/ssjs"
      },
      {
        "id": 104161,
        "name": "validation",
        "parentId": 103987,
        "categoryType": "asset",
        "rootFolder": false,
        "folderPath": "Content Builder/Basetime Preference Center/lib/validation"
      }
    ],
    "assets": [
      {
        "id": 106442,
        "bldrId": "d448acbc-21a5-419f-b81f-47f4178f8242",
        "name": "functions",
        "customerKey": "860f3a3e-8bc9-448c-aa99-4b1c9e60c09b",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103523,
          "name": "backend",
          "parentId": 103522,
          "folderPath": "Content Builder/Basetime Preference Center/backend"
        },
        "content": "<script runat=\"server\">\n  Platform.Load('core', '1.1')\n\n  //updated comment\n</script>"
      },
      {
        "id": 106443,
        "bldrId": "fc4722f7-533a-4a19-a952-d4846712091f",
        "name": "processing_api",
        "customerKey": "683f297b-7c48-47b1-97eb-e49d4892ec51",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103523,
          "name": "backend",
          "parentId": 103522,
          "folderPath": "Content Builder/Basetime Preference Center/backend"
        },
        "content": "<script runat=\"server\">\n  Platform.Load(\"core\", \"1.1.1\");\n  Platform.Response.SetResponseHeader(\"Access-Control-Allow-Origin\", \"*\");\n  Platform.Response.SetResponseHeader('Strict-Transport-Security', 'max-age=200');\n  Platform.Response.SetResponseHeader('X-XSS-Protection', '1; mode=block');\n  Platform.Response.SetResponseHeader('X-Frame-Options', 'Deny');\n  Platform.Response.SetResponseHeader('X-Content-Type-Options', 'nosniff');\n  Platform.Response.SetResponseHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  Platform.Response.SetResponseHeader('Content-Security-Policy', \"default-src 'self'\");\n\n  var postData = Platform.Request.GetPostData();\n  var postJSON = Platform.Function.ParseJSON(postData);\n\n  var action = Platform.Request.GetQueryStringParameter('action');\n  var payload = Platform.Request.GetQueryStringParameter('payload');\n\n  var applicationConfiguration = Platform.Function.ContentBlockByName('Content Builder\\\\Basetime Preference Center\\\\configurations\\\\app_configuration')\n  var applicationConfigurationJSON = Platform.Function.ParseJSON(applicationConfiguration)\n  var map = applicationConfigurationJSON.map;\n  \n  var preferenceCenterDataExtensionExternalKey = map.data_extension.preferenceCenterExternalKey;\n\n  Platform.Function.ContentBlockByName(map.content_block.ssjs.wsProxy)\n  Platform.Function.ContentBlockByName(map.content_block.ssjs.utils)\n\n  var fns = {\n    utils: util(),\n    wsProxy: wsProxy()\n  }\n\n  // var utils = util();\n  // var wsFn = wsProxy();\n\n  var res = '';\n  var reqConfig = {};\n\n  //Begin API Control Block\n  //Run specific set of code/functions based on the 'action' parameter\n  //After code is finished, the 'response' function returns the output and 'break' stops the processing\n  switch (action) {\n    case 'submitPreferenceForm':\n      //update item\n      reqConfig = {\n        soapObjName: \"DataExtensionObject\",\n        options: {\n          SaveOptions: [{\n            PropertyName: \"*\",\n            SaveAction: \"UpdateAdd\"\n          }]\n        },\n        payload: {\n          CustomerKey: preferenceCenterDataExtensionExternalKey,\n          Properties: postJSON.postData.updatedInfo\n        }\n      }\n\n      var updatePreferences = fns.wsProxy.update(reqConfig);\n      res = updatePreferences;\n\n      break;\n\n\n    case 'getCurrentPreferences':\n      var preferences;\n\n      reqConfig = {\n        dataExtensionKey: preferenceCenterDataExtensionExternalKey,\n        cols: [],\n        filter: {\n          Property: \"subscriberId\",\n          SimpleOperator: \"equals\",\n          Value: postJSON.subscriberId\n        }\n      };\n\n      var preferenceRequest = fns.utils.getDERecords(reqConfig, fns);\n\n      if(preferenceRequest.Status === 'OK'){\n        preferences = fns.utils.formatResult(preferenceRequest.Results, 'Properties')\n        res = {\n          Status: 'OK',\n          Results: preferences\n        }\n      } else {\n        res = preferenceRequest;\n      }\n\n      break;\n  };\n\n  fns.utils.response(res)\n\n\n</script>"
      },
      {
        "id": 106444,
        "bldrId": "110e71f3-92da-4784-b469-b9244f6d687f",
        "name": "app_configuration",
        "customerKey": "2b62872f-933c-4be4-a6d5-3e0cfb673ae3",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103524,
          "name": "configurations",
          "parentId": 103522,
          "folderPath": "Content Builder/Basetime Preference Center/configurations"
        },
        "content": "{\n  \"branding\": {\n    \"brandName\": \"Basetime\",\n    \"websiteURL\": \"https://basetime.io\",\n    \"supportDarkMode\": \"true\",\n    \"default\": {\n      \"logo\": \"https://avagate.com/img/Avagate-Logo-White.svg\",\n      \"colors\": {\n        \"primary\": \"#00FFFF\",\n        \"secondary\": \"blue\",\n        \"accent\": \"yellow\",\n        \"paper\": \"#173463\"\n      }\n    },\n    \"dark\": {\n      \"logo\": \"https://basetime.io/basetime-developer-network-logo.svg\",\n      \"colors\": {\n        \"primary\": \"#aadeeb\", \n        \"secondary\": \"#0098bc\",\n        \"accent\": \"#fc6833\",\n        \"paper\": \"#0f1d20\"\n      }\n    }\n  },\n  \"unauthorized\": {\n    \"icon\": \"mdi-account-question\",\n    \"copy\": \"Looks like we can't find you in your system. <br> Please ensure you've reached this page from a basetime.io email. <br><br> Visit <a href='basetime.io'>Basetime.io</a> to sign up for emails.\"\n  },\n  \"map\": {\n    \"content_block\": {\n      \"processing_api\": \"\",\n      \"app_configuration\": \"\",\n      \"preference_options\": \"Content Builder\\\\Basetime Preference Center\\\\configurations\\\\preference_options\",\n      \"processing_api\": \"\",\n      \"component_imports\": \"\",\n      \"branding_bar\": \"Content Builder\\\\Basetime Preference Center\\\\frontend\\\\components\\\\branding_bar\",\n      \"channel_drawer\": \"Content Builder\\\\Basetime Preference Center\\\\frontend\\\\components\\\\channel_drawer\",\n      \"preference_form\": \"Content Builder\\\\Basetime Preference Center\\\\frontend\\\\components\\\\preference_form\",\n      \"unauthorized_user\": \"Content Builder\\\\Basetime Preference Center\\\\frontend\\\\components\\\\unauthorized_user\",\n      \"submit_button_animation\": \"'Content Builder\\\\Basetime Preference Center\\\\frontend\\\\styles\\\\submit_button_animation\",\n      \"app_js\": \"Content Builder\\\\Basetime Preference Center\\\\frontend\\\\app_js\",\n      \"subscriber_validation\": \"\",\n      \"backend_api\": \"\",\n      \"ssjs\": {\n        \"wsProxy\": \"Content Builder\\\\Basetime Preference Center\\\\lib\\\\ssjs\\\\wsProxy\",\n        \"utils\": \"Content Builder\\\\Basetime Preference Center\\\\lib\\\\ssjs\\\\utils\"\n      }\n    },\n    \"data_extension\": {\n      \"preferenceCenterExternalKey\": \"A89D62BA-3F5F-400C-B0E9-979FD11948EF\"\n    }\n    \n  },\n  \"apiBaseURL\": \"https://cloud.emailmarketingunderstood.com/basetimepreferenceapi\",\n  \"subscriberDataExtensionExternalKey\": \"\",\n}"
      },
      {
        "id": 106445,
        "bldrId": "f63b1a9c-fbd9-4ec3-bd6e-67a62e728578",
        "name": "app_html",
        "customerKey": "1735a3a0-ecfc-452f-8df3-d1d2234324c3",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103525,
          "name": "frontend",
          "parentId": 103522,
          "folderPath": "Content Builder/Basetime Preference Center/frontend"
        },
        "content": "<v-app>\n  <v-main>\n    <v-row overflow=\"hidden\">\n      <v-col cols=\"12\">\n        <branding-bar @update-dark-mode=\"onUpdateDarkMode\" :dark-mode=\"darkMode\" :branding=\"branding\"></branding-bar>\n      </v-col>\n    </v-row>\n    <v-row v-if=\"authorized\">\n      <v-col cols=\"2\">\n        <channel-drawer @update-channel-selection=\"onUpdateChannelSelection\" :branding=\"branding\"\n          :preference-options=\"preferenceOptions\"></channel-drawer>\n      </v-col>\n      <v-col cols=\"10\">\n        <preference-form @submit-preference-form=\"onSubmitPreferenceForm\" :subscriber-preferences=\"subscriber.preferences\" :form-submitting=\"formSubmitting\"\n          :branding=\"branding\" :preference-options=\"preferenceOptions\" :channel-selection=\"channelSelection\">\n        </preference-form>\n      </v-col>\n    </v-row>\n    <v-row v-else>\n      <unauthorized-user :branding=\"branding\" :unauthorized=\"applicationConfiguration.unauthorized\">\n      </unauthorized-user>\n    </v-row>\n  </v-main>\n</v-app>"
      },
      {
        "id": 106446,
        "bldrId": "5361e419-f1a7-405d-afe9-8a0f23de02ff",
        "name": "app_js",
        "customerKey": "9d6e90b9-698b-4279-9c20-c69f6b9fe29e",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103525,
          "name": "frontend",
          "parentId": 103522,
          "folderPath": "Content Builder/Basetime Preference Center/frontend"
        },
        "content": "new Vue({\n  el: '#app',\n  vuetify: new Vuetify(),\n  data () { \n    return {\n      authorized: isAuthorized === 1 ? true : false,\n      darkMode: false,\n      debug: true,\n      applicationConfiguration,\n      preferenceOptions,\n      channelSelection,\n      formSubmitting: false,\n      subscriber: {\n        subscriberId: subscriberId,\n        subscriberKey: subscriberKey,\n        emailAddress: emailAddress,\n        jobId: jobId,\n        preferences: []\n      }\n    }\n  },\n  mounted () {\n    this.debug && this.debugData();\n    this.getExistingPreferences();\n  },\n  methods: {\n    debugData() {\n      console.log({\n        config: this.applicationConfiguration,\n        preferenceOptions: this.preferenceOptions\n      })\n    },\n    getDefaultChannelSelection(){\n      const channels = Object.keys(this.preferenceOptions.channels);\n      this.channelSelection = channels[0];\n    },\n    async getExistingPreferences(){\n      try {\n        const subscriberId = this.subscriber.subscriberId;\n        const submitRequest = await axios.post(`${this.apiBaseURL}getCurrentPreferences`, {\n          subscriberId\n        })\n\n        console.log(submitRequest)\n\n        if(submitRequest.data.Status === 'OK'){\n          this.subscriber.preferences = submitRequest.data.Results;\n        } \n\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    onUpdateDarkMode() {\n      this.darkMode = !this.darkMode\n    },\n    onUpdateChannelSelection($event) {\n      this.channelSelection = $event\n    },\n    async onSubmitPreferenceForm($event) {\n      try {\n        let postData = {\n          updatedInfo: []\n        };\n        \n        if(Object.prototype.hasOwnProperty.call($event, 'profile')){\n          const profileData = $event.profile;\n          for(const pro in profileData){\n            postData.updatedInfo.push({\n              Name: pro,\n              Value: profileData[pro]\n            })\n          }\n        }\n\n        if(Object.prototype.hasOwnProperty.call($event, 'preferences')){\n          const preferenceData = $event.preferences;\n          for(const pre in preferenceData){\n            postData.updatedInfo.push({\n              Name: pre,\n              Value: preferenceData[pre]\n            })\n          }\n        }\n     \n        if(Object.prototype.hasOwnProperty.call($event, 'subscriptions')){\n          const subscriptionData = $event.subscriptions.subscriptions;\n          let subscriptions = ''\n\n          for(const sub of subscriptionData){\n           subscriptions += `${sub}|`\n          }\n\n          subscriptions = subscriptions.substring(0, subscriptions.length - 1)\n\n          postData.updatedInfo.push({\n            Name: 'subscriptions',\n            Value: subscriptions\n          })\n        }\n\n        postData.updatedInfo.push({\n          Name: 'subscriberId',\n          Value: this.subscriber.subscriberId\n        },\n        {\n          Name: 'emailAddress',\n          Value: this.subscriber.emailAddress\n        },\n        {\n          Name: 'channel',\n          Value: this.channelSelection\n        })\n\n\n        const submitRequest = await axios.post(`${this.apiBaseURL}submitPreferenceForm`, {\n          postData\n        })\n        \n        console.log(submitRequest)\n\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  },\n  computed: {\n    apiBaseURL(){\n      return `${this.applicationConfiguration.apiBaseURL}?action=`\n    },\n    branding(){\n      if(this.applicationConfiguration.branding.supportDarkMode && this.darkMode){\n        return this.applicationConfiguration.branding.dark\n      }\n\n      return this.applicationConfiguration.branding.default\n    }\n  }\n})"
      },
      {
        "id": 106447,
        "bldrId": "3115abb9-26d9-42a5-b2c1-de7f13b9d433",
        "name": "_component_imports",
        "customerKey": "1905a823-e046-472b-aecd-1794eba63433",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103526,
          "name": "components",
          "parentId": 103525,
          "folderPath": "Content Builder/Basetime Preference Center/frontend/components"
        },
        "content": "%%=TreatAsContent(ContentBlockByName('Content Builder\\Basetime Preference Center\\frontend\\styles\\submit_button_animation'))=%%\n%%=TreatAsContent(ContentBlockByName('Content Builder\\Basetime Preference Center\\lib\\validation\\subscriber_validation'))=%%\n\n<script runat=\"server\">\n  Platform.Load(\"core\", \"1.1.1\");\n\n  var applicationConfiguration = Platform.Function.ContentBlockByName('Content Builder\\\\Basetime Preference Center\\\\configurations\\\\app_configuration')\n  var applicationConfigurationJSON = Platform.Function.ParseJSON(applicationConfiguration)\n  var map = applicationConfigurationJSON.map;\n\n  var preferenceOptions = Platform.Function.ContentBlockByName(map.content_block.preference_options)\n  var channelDrawer = Platform.Function.ContentBlockByName(map.content_block.channel_drawer)\n  var preferenceForm = Platform.Function.ContentBlockByName(map.content_block.preference_form)\n  var unauthorizedUser = Platform.Function.ContentBlockByName(map.content_block.unauthorized_user)\n  var brandingBar = Platform.Function.ContentBlockByName(map.content_block.branding_bar)\n  var appJS = Platform.Function.ContentBlockByName(map.content_block.app_js)\n\n</script>\n\n%%=Concat('<sc','rip','t>')=%%\n\n  Vue.use(VueToast, {\n  position: 'top-right',\n  duration: 6000,\n  dismissable: true\n  });\n\n  Vue.use(VueFormulate)\n\n  const applicationConfiguration = <ctrl:var name=applicationConfiguration />\n  const preferenceOptions = <ctrl:var name=preferenceOptions />\n\n  const channelKeys = Object.keys(preferenceOptions.channels);\n  const channelSelection = channelKeys[0];\n\n  const isAuthorized = <ctrl:var name=authorized />\n  const subscriberId = <ctrl:var name=subscriberId />\n  const emailAddress = <ctrl:var name=emailAddress />\n  const subscriberKey = <ctrl:var name=subscriberKey />\n  const jobId = <ctrl:var name=jobId />\n\n  <ctrl:var name=appJS />\n  <ctrl:var name=channelDrawer />\n  <ctrl:var name=preferenceForm />\n  <ctrl:var name=unauthorizedUser />\n  <ctrl:var name=brandingBar />\n\n  %%=Concat('</sc','rip','t>')=%%"
      },
      {
        "id": 106793,
        "bldrId": "2fd2d17b-bb6f-4dd6-9e0a-971712e8798c",
        "name": "channel_drawer",
        "customerKey": "91082bde-88de-4630-992e-b61172208ba0",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103526,
          "name": "components",
          "parentId": 103525,
          "folderPath": "Content Builder/Basetime Preference Center/frontend/components"
        },
        "content": "/*\nWhat is this component?\n*/\nVue.component('channel-drawer', {\n  props: {\n    preferenceOptions: Object,\n    branding: Object\n  },\n  methods: {\n    getPreferenceChannels: function (preferenceOptions) {\n      return Object.keys(preferenceOptions['channels'])\n    },\n    getChannelIcon: function (channel, preferenceOptions) {\n      return this.preferenceOptions['channels'][channel]['icon']\n    }\n  },\n  data() {\n    return {\n      channels: this.getPreferenceChannels(preferenceOptions),\n      right: null,\n    }\n  },\n  template: `\n  <div>\n    <v-navigation-drawer \n      permanent\n      max-height=\"100vh\"\n      height=\"80vh\"\n    >\n      <v-list dense nav>\n        <v-list-item v-for=\"channel in channels\" :key=\"channel\"  @click=\"$emit('update-channel-selection', channel)\" link>\n          <v-list-item-icon>\n            <v-icon\n              large\n              :color=\"branding.colors.accent\"\n            >{{ getChannelIcon(channel, this.preferenceOptions) }}</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title class=\"text-h6 mb-8\">{{ channel }}</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n</div>\n`\n})"
      },
      {
        "id": 106843,
        "bldrId": "b39f9633-e124-412b-98f2-b193a43fe779",
        "name": "preference_options",
        "customerKey": "62a8a15e-13ca-4e40-9316-ccd2f75a84bc",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103524,
          "name": "configurations",
          "parentId": 103522,
          "folderPath": "Content Builder/Basetime Preference Center/configurations"
        },
        "content": "{\n  \"profile\": {\n    \"headline\": \"Update your profile\",\n    \"copy\": \"\",\n    \"inputs\": [\n      {\n        \"type\": \"text\",\n        \"label\": \"First Name\",\n        \"name\": \"firstName\"      \n      },\n      {\n        \"type\": \"text\",\n        \"label\": \"Last Name\",\n        \"name\": \"lastName\"\n      }\n    ],\n    \"checkboxes\": []\n  },\n  \"channels\": {\n    \"email\": {\n      \"icon\": \"mdi-email\",\n      \"preferences\": {\n        \"headline\": \"Email Preferences\",\n        \"copy\": \"Please select your email preferences below\",\n        \"radios\": [\n          {\n            \"value\": \"onceAWeek\",\n            \"label\": \"Once A Week\"\n          },\n          {\n            \"value\": \"holidays\",\n            \"label\": \"Holidays Only\"\n          },\n          {\n            \"value\": \"specialEvents\",\n            \"label\": \"Special Events Only\"\n          },\n          {\n            \"value\": \"unsubscribe\",\n            \"label\": \"Unsubscribe Me From All Emails\"\n          }\n        ]\n      },\n      \"subscriptions\": {\n        \"headline\": \"Email Subscriptions\",\n        \"copy\": \"Please select your email subscriptions below\",\n        \"inputs\": [],\n        \"checkboxes\": [\n          {\n            \"value\": \"dailyNewsletter\",\n            \"label\": \"Daily Newsletter\"\n          },\n          {\n            \"value\": \"devChat\",\n            \"label\": \"Developer Chat\"\n          },\n          {\n            \"value\": \"devOps\",\n            \"label\": \"Developer Ops Weekly\"\n          }\n        ]\n      }\n    },\n    \"sms\": {\n      \"icon\": \"mdi-android-messages\",\n      \"preferences\": {\n        \"headline\": \"SMS Preferences\",\n        \"copy\": \"Please select your text message preferences below\",\n        \"radios\": [\n          {\n            \"value\": \"onceAWeek\",\n            \"label\": \"Once A Week\"\n          },\n          {\n            \"value\": \"holidays\",\n            \"label\": \"Holidays Only\"\n          },\n          {\n            \"value\": \"specialEvents\",\n            \"label\": \"Special Events Only\"\n          },\n          {\n            \"value\": \"unsubscribe\",\n            \"label\": \"Unsubscribe Me From All Emails\"\n          }\n        ]\n      },\n      \"subscriptions\": {\n        \"headline\": \"SMS Subscriptions\",\n        \"copy\": \"Please select your text message subscriptions below\",\n        \"inputs\": [],\n        \"checkboxes\": [\n          {\n            \"value\": \"dailyNewsletter\",\n            \"label\": \"Daily Newsletter\"\n          },\n          {\n            \"value\": \"devChat\",\n            \"label\": \"Developer Chat\"\n          },\n          {\n            \"value\": \"devOps\",\n            \"label\": \"Developer Ops Weekly\"\n          }\n        ]\n      }\n    }\n  }\n}"
      },
      {
        "id": 106938,
        "bldrId": "fdd2860b-053b-4b45-aa8a-ca80582adc28",
        "name": "branding_bar",
        "customerKey": "2e504d94-75b5-46e3-9b3c-1b0cb32d3be0",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103526,
          "name": "components",
          "parentId": 103525,
          "folderPath": "Content Builder/Basetime Preference Center/frontend/components"
        },
        "content": "/*\nWhat is this component?\n*/\nVue.component('branding-bar', {\nprops: {\nbranding: Object\n},\nmounted() {\n\n},\ndata() {\nreturn {\ndarkModeToggle: false\n}\n},\nwatch: {\n\n},\nmethods: {\n\n},\ntemplate: `\n<div>\n  <v-card>\n    <v-app-bar :color=\"branding.colors.paper\" position=\"absolute\" height=\"100\">\n      <!-- <v-app-bar-nav-icon></v-app-bar-nav-icon> -->\n\n      <v-toolbar-title>\n        <v-img :src=\"branding.logo\"></v-img>\n      </v-toolbar-title>\n\n      <v-spacer></v-spacer>\n\n\n      <v-switch :color=\"branding.colors.accent\" @click=\"$emit('update-dark-mode')\" v-model=\"darkModeToggle\">\n        <template v-slot:label>\n          <v-icon v-if=\"darkModeToggle\" large color=\"#F5F5F5\">\n            mdi-moon-waxing-crescent\n          </v-icon>\n          <v-icon v-else large color=\"#616161\">\n            mdi-white-balance-sunny\n          </v-icon>\n        </template>\n      </v-switch>\n\n    </v-app-bar>\n  </v-card>\n</div>\n`\n})"
      },
      {
        "id": 107200,
        "bldrId": "a404ebbf-2731-4d8c-b708-8478f8c93f06",
        "name": "preference_form",
        "customerKey": "3c12df57-2242-49c8-8eba-e5bfdb7b1a12",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103526,
          "name": "components",
          "parentId": 103525,
          "folderPath": "Content Builder/Basetime Preference Center/frontend/components"
        },
        "content": "\n\n/*\nWhat is this component?\n*/\nVue.component('preference-form', {\n  props: {\n    branding: Object,\n    preferenceOptions: Object,\n    channelSelection: String,\n    formSubmitting: Boolean,\n    subscriberPreferences: Array\n  },\n  beforeMount() {\n    this.setProfileFormSchema();\n    this.setPreferenceFormSchema();\n    this.setSubscriptionFormSchema();\n  },\n  data() {\n    return {\n      profileFormSchema: [],\n      preferenceFormSchema: [],\n      subscriptionFormSchema: [],\n      formInputs: {\n        profile: {},\n        preferences: {},\n        subscriptions: {}\n      }\n    }\n  },\n  methods: {\n    submitPreferenceForm() {\n      this.$emit('submit-preference-form', this.formInputs)\n    },\n    setProfileFormSchema() {\n      let profileSchema = [\n        {\n          \"component\": \"h2\",\n          \"children\": `${this.preferenceOptions['profile']['headline']}`\n        },\n        {\n          \"component\": \"p\",\n          \"children\": `${this.preferenceOptions['profile']['copy']}`\n        }\n      ]\n\n      if (\n        Object.prototype.hasOwnProperty.call(this.preferenceOptions.profile, 'inputs')\n      ) {\n        const profileData = this.preferenceOptions.profile.inputs;\n\n        for (const pro in profileData) {\n          let inputObject = profileData[pro];\n          this.formInputs['profile'][inputObject.name] = this.channelPreferences[inputObject.name];\n      \n          profileSchema.push(inputObject)\n        }\n      }\n\n      this.profileFormSchema = profileSchema\n    },\n    setPreferenceFormSchema() {\n      let preferenceSchema = [\n        {\n          \"component\": \"h2\",\n          \"children\": `${this.preferenceChannelConfiguration['preferences']['headline']}`\n        },\n        {\n          \"component\": \"p\",\n          \"children\": `${this.preferenceChannelConfiguration['preferences']['copy']}`\n        }\n      ]\n\n      if (\n        Object.prototype.hasOwnProperty.call(this.preferenceChannelConfiguration['preferences'], 'radios')\n      ) {\n        preferenceSchema.push({\n          \"name\": \"preference\",\n          \"type\": \"radio\",\n          \"options\": this.preferenceChannelConfiguration['preferences']['radios']\n        })\n\n        this.formInputs.preferences.preference = this.channelPreferences.preference;\n      }\n\n      this.preferenceFormSchema = preferenceSchema\n    },\n    setSubscriptionFormSchema() {\n      let subscriptionSchema = [\n        {\n          \"component\": \"h2\",\n          \"children\": `${this.preferenceChannelConfiguration['subscriptions']['headline']}`\n        },\n        {\n          \"component\": \"p\",\n          \"children\": `${this.preferenceChannelConfiguration['subscriptions']['copy']}`\n        }\n      ]\n\n      if (\n        Object.prototype.hasOwnProperty.call(this.preferenceChannelConfiguration['subscriptions'], 'checkboxes')\n      ) {\n        subscriptionSchema.push({\n          \"name\": \"subscriptions\",\n          \"type\": \"checkbox\",\n          \"options\": this.preferenceChannelConfiguration['subscriptions']['checkboxes']\n        })\n      }\n\n      this.formInputs.subscriptions.subscriptions = this.channelPreferences.subscriptions.split(\"|\") || [];\n      this.subscriptionFormSchema = subscriptionSchema\n    }\n  },\n  watch: {\n    channelSelection: function(newVal, oldVal) {\n      this.setProfileFormSchema();\n      this.setPreferenceFormSchema();\n      this.setSubscriptionFormSchema();\n    }\n  },\n  computed: {\n    preferenceChannelConfiguration() {\n      if (this.channelSelection) {\n        return this.preferenceOptions['channels'][this.channelSelection]\n      }\n    },\n    channelPreferences() {\n      if (this.channelSelection) {\n        return this.subscriberPreferences.find((pref) => pref.channel === this.channelSelection)\n      }\n    },\n\n  },\n  template: `\n<section>\n  <v-row class=\"flex\">\n    <v-col cols=\"12\" class=\"justify-center\">\n      <div v-show=\"preferenceOptions.profile.inputs\">\n        <formulate-form :values=\"formInputs.profile\" v-model=\"formInputs.profile\" :schema=\"profileFormSchema\" />\n      </div>\n    </v-col>\n  </v-row>\n\n  <v-row>\n    <v-col cols=\"12\" md=\"8\">\n      <v-divider class=\"my-5\"></v-divider>\n    </v-col>\n  </v-row>\n\n  <v-row class=\"flex\">\n    <v-col cols=\"12\" md=\"4\" class=\"mb-xs-4 mb-md-0\">\n      <div v-show=\"channelSelection\">\n        <formulate-form :values=\"formInputs.preferences\" v-model=\"formInputs.preferences\" :schema=\"preferenceFormSchema\" />\n      </div>\n    </v-col>\n    <v-col cols=\"12\" md=\"4\">\n      <div v-show=\"channelSelection\">\n        <formulate-form :values=\"formInputs.subscriptions\" v-model=\"formInputs.subscriptions\" :schema=\"subscriptionFormSchema\" />\n      </div>\n    </v-col>\n  </v-row>\n\n  <v-row>\n    <v-col cols=\"12\" md=\"8\">\n      <v-btn class=\"ma-2\" :loading=\"formSubmitting\" :disabled=\"formSubmitting\" color=\"info\" @click=\"submitPreferenceForm\">\n        Submit Updates\n        <template v-slot:loader>\n          <span class=\"custom-loader\">\n            <v-icon light>mdi-cached</v-icon>\n          </span>\n        </template>\n      </v-btn>\n    </v-col>\n  </v-row>\n</section>\n`\n})"
      },
      {
        "id": 107340,
        "bldrId": "0705cd58-21fa-43e2-8771-87170fba0b95",
        "name": "submit_button_animation",
        "customerKey": "392f23f9-9f48-496b-90f4-0a5105edd768",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103975,
          "name": "styles",
          "parentId": 103525,
          "folderPath": "Content Builder/Basetime Preference Center/frontend/styles"
        },
        "content": "<style>\n  .custom-loader {\n    animation: loader 1s infinite;\n    display: flex;\n  }\n  @-moz-keyframes loader {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes loader {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @-o-keyframes loader {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes loader {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n</style>"
      },
      {
        "id": 107374,
        "bldrId": "ba60b073-8ca0-45a3-8346-8d18d6513110",
        "name": "wsProxy",
        "customerKey": "d7bc6c6f-e41e-404a-bb5c-55316681c26d",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock",
          "displayName": "Code Snippet Block"
        },
        "category": {
          "id": 103988,
          "name": "ssjs",
          "parentId": 103987,
          "folderPath": "Content Builder/Basetime Preference Center/lib/ssjs"
        },
        "content": "<script runat=\"server\">\n  Platform.Load(\"core\", \"1.1\");\n\n  function wsProxy() {\n    var prox = new Script.Util.WSProxy();\n    var fn = {};\n\n    /*******************************\n     * @config {<Object>}\n     * @continueRequest {Boolean}\n     * @return {Array}\n     ******************************/\n    fn.retrieve = function (config, continueRequest) {\n\n      var reqID;\n      var moreData = true;\n      var continueRequest = continueRequest ? continueRequest : false;\n      var obj = config.soapObjName ? config.soapObjName : null;\n      var opts = config.opts ? config.opts : {};\n      var props = config.props ? config.props : {};\n      var filter = config.filter ? config.filter : {};\n      var cols = config.cols ? config.cols : null;\n      var mid = config.mid ? config.mid : null;\n      // prox = mid ? util.proxyContext(prox, mid) : prox;\n\n      if (!config) { return 'configuration required'; }\n      if (!obj) { return 'SOAP object is required'; }\n\n      var resultsOut = [];\n\n      var data = prox.retrieve(obj, cols, filter, opts, props)\n\n      return data\n\n    } // end retrieve\n\n    /*******************************\n     * @config {Object}\n     * @return {Object}\n     ******************************/\n    fn.update = function (config) {\n      var obj = config.soapObjName ? config.soapObjName : null;\n      var payload = config.payload ? config.payload : null;\n      var options = config.options ? config.options : null;\n      var mid = config.mid ? config.mid : null;\n      // prox = mid ? utils.proxyContext(prox, mid) : prox;\n\n      if (!config) { return 'configuration required'; }\n      if (!obj) { return 'SOAP object is required'; }\n      if (!payload) { return 'payload is required'; }\n\n      // var batch = utils.isArray(payload);\n      var batch = false;\n\n      if (batch) {\n        var res = prox.updateBatch(obj, payload, options);\n      } else {\n        var res = prox.updateItem(obj, payload, options);\n      }\n\n      return res;\n    } // end update\n\n\n    return fn\n  }\n\n</script>"
      },
      {
        "id": 106368,
        "bldrId": "982afe57-b829-4ae8-a303-5fa7da6b4386",
        "name": "index",
        "customerKey": "a448dc4e-1fde-41ca-bb6b-216ebb375e44",
        "assetType": {
          "id": 205,
          "name": "webpage",
          "displayName": "Web Page"
        },
        "category": {
          "id": 35088,
          "name": "Content Builder",
          "parentId": 0,
          "folderPath": "Content Builder"
        },
        "meta": {
          "globalStyles": {
            "isLocked": false,
            "body": {
              "max-width": "1280px"
            }
          }
        },
        "views": {
          "html": {
            "thumbnail": {},
            "content": "<!DOCTYPE html>\n<html>\n\n<head>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js\"></script>\n\n  <!-- Axios API - https://www.npmjs.com/package/axios -->\n  <script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\n\n  <!-- Toast Notifications - https://www.npmjs.com/package/vue-toast-notification -->\n  <script src=\"https://cdn.jsdelivr.net/npm/vue-toast-notification@0.6\"></script>\n  <link href=\"https://cdn.jsdelivr.net/npm/vue-toast-notification/@0.6/dist/theme-sugar.css\" rel=\"stylesheet\">\n\n  \n  <script src=\"https://cdn.jsdelivr.net/npm/@braid/vue-formulate@2.5.3/dist/formulate.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@braid/vue-formulate@2.5.3/dist/snow.css\">\n\n  <link href=\"https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900\" rel=\"stylesheet\">\n  <link href=\"https://cdn.jsdelivr.net/npm/@mdi/font@6.x/css/materialdesignicons.min.css\" rel=\"stylesheet\">\n  <link href=\"https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui\">\n</head>\n\n<body>\n  <div v-cloak id=\"app\">\n    %%=TreatAsContent(ContentBlockByName('Content Builder\\Basetime Preference Center\\frontend\\app_html'))=%%\n  </div>\n\n\n  %%=TreatAsContent(ContentBlockByName('Content Builder\\Basetime Preference Center\\frontend\\components\\_component_imports'))=%%\n\n</body>\n\n</html>",
            "meta": {},
            "slots": {
              "col1": {
                "design": "<p style=\"font-family:arial;color:#ccc;font-size:11px;text-align:center;vertical-align:middle;font-weight:bold;padding:10px;margin:0;border:#ccc dashed 1px;\">Drop blocks or content here</p>",
                "modelVersion": 2
              }
            },
            "modelVersion": 2
          }
        }
      },
      {
        "id": 106396,
        "bldrId": "a9712a31-6447-4b8f-9847-41a4094cd62a",
        "name": "backend_api",
        "customerKey": "1fcee7d2-3998-4d17-87e2-b487abf3bb65",
        "assetType": {
          "id": 240,
          "name": "jscoderesource",
          "displayName": "Javascript Code Resource"
        },
        "category": {
          "id": 35088,
          "name": "Content Builder",
          "parentId": 0,
          "folderPath": "Content Builder"
        },
        "content": "%%=TreatAsContent(ContentBlockByName('Content Builder\\Basetime Preference Center\\backend\\processing_api'))=%%"
      },
      {
        "bldrId": "b59c080c-e3e3-4870-ada3-bb09d656fcee",
        "name": "subscriber_validation",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock"
        },
        "category": {
          "id": 104161,
          "name": "validation",
          "parentId": 103987,
          "folderPath": "Content Builder/Basetime Preference Center/lib/validation"
        },
        "content": "%%[\n  set @subscriberkey = AttributeValue(\"_subscriberkey\")\n  set @subscriberid = AttributeValue(\"subscriberid\")\n  set @emailAddress = AttributeValue(\"emailaddr\")\n  set @jobid = AttributeValue(\"jobid\")\n]%%\n\n<script runat=\"server\">\n  Platform.Load(\"core\", \"1.1.1\");\n\n  var subscriberKey = Stringify(Variable.GetValue(\"@subscriberkey\"));\n  var subscriberId = Variable.GetValue(\"@subscriberid\");\n  var emailAddress = Stringify(Variable.GetValue(\"@emailAddress\"));\n  var jobId = Variable.GetValue(\"@jobid\");\n\n  var authorized = 0;\n  if(typeof subscriberId !== 'undefined' && (typeof jobId !== 'undefined' && jobId !== '0')) {\n    authorized = 1;\n  }\n\n  authorized = 1\n</script>",
        "id": 107746,
        "customerKey": "687968b9-0253-4ae5-930b-24b113ed07ad"
      },
      {
        "bldrId": "0129632d-e157-4f1d-92f7-373b2e0ec57a",
        "name": "unauthorized_user",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock"
        },
        "category": {
          "id": 103526,
          "name": "components",
          "parentId": 103525,
          "folderPath": "Content Builder/Basetime Preference Center/frontend/components"
        },
        "content": "/*\nWhat is this component?\n*/\nVue.component('unauthorized-user', {\nprops: {\n  unauthorized: Object,\n  branding: Object\n},\nmounted() {\n\n},\ndata() {\nreturn {\n\n}\n},\nwatch: {\n\n},\nmethods: {\n\n},\ntemplate: `\n<v-col cols=\"10\" class=\"flex text-center mx-auto\">\n  <v-row justify=\"space-around\">\n    <v-icon :color=\"branding.colors.accent\" size=\"200\" aria-label=\"My Account\" role=\"img\" aria-hidden=\"false\">\n      {{unauthorized.icon}}\n    </v-icon>\n  </v-row>\n  <v-row justify=\"space-around\">\n    <v-col cols=\"8\" class=\"text-h6 text-md-h5\">\n      <span v-html=\"unauthorized.copy\"></span>\n    </v-col>\n  </v-row>\n\n</v-col>\n`\n})",
        "id": 107911,
        "customerKey": "fa95807c-01d4-492d-af21-2898222e4bbc"
      },
      {
        "bldrId": "091bd822-cd64-45de-b56f-39b59d4cff2d",
        "name": "utils",
        "assetType": {
          "id": 220,
          "name": "codesnippetblock"
        },
        "category": {
          "id": 103988,
          "name": "ssjs",
          "parentId": 103987,
          "folderPath": "Content Builder/Basetime Preference Center/lib/ssjs"
        },
        "content": "<script runat=\"server\">\n  Platform.Load(\"core\", \"1.1.1\");\n\n  function util() {\n    var fn = {}\n\n    fn.isArray = function (arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\n\n    fn.response = function (arg) {\n      Write(Stringify(arg))\n    }\n\n\n    fn.proxyContext = function (prox, mid) {\n      if (mid) {\n        //reset previous settings\n        prox.resetClientIds();\n        // Set ClientID \n        prox.setClientId({\n          \"ID\": mid\n        });\n      }\n      return prox\n    }\n\n\n    fn.deBug = function (action, response, logExtKey, debug) {\n      if (response) {\n        debug ? Write(\"<br><b>\" + action + \":</b><br> \" + Stringify(response) + \"<br><br>\") : null;\n      } else {\n        debug ? Write(\"<br><b>\" + action + \"</b><br> \") : null;\n      }\n\n      if (logExtKey) {\n        var log = {\n          action: action ? action : null,\n          log: response ? response : null\n        }\n\n        addLog(log, logExtKey);\n      }\n    }\n\n\n    /***********************************************\n     *\n     *   function addLog()\n     *   Pushes logging object to array to be written to a Data Extension\n     *   \n     *    @param obj {Object} logging object that matches the data extension\n     *    @param logExtKey {String} External Key to log records to\n     *    \n     ***********************************************/\n    fn.addLog = function (obj, logExtKey) {\n      var logDE = DataExtension.Init(logExtKey);\n      var logAction = logDE.Rows.Add(obj);\n    };\n\n\n\n    /*\n      getDERecords Function\n       Retrieves rows from a Data Extension\n       \n        Dependencies:\n           - DEData Function\n        @config {object} object with payload for wsProxy call\n       \n       //Sample Usage\n       \n       var config = {\n         deName: \"Data Extension Name\",\n         col: [],\n         filter: {\n           Property: \"EmailAddress\",\n           SimpleOperator: \"isNotNull\",\n           Value: \"\"\n         },\n         opts: {\n           BatchSize: 10\n         }\n       };\n           \n       var data = getDERecords(config);\n       \n       //optional//\n       If only specific fields are needed, add a cols array of those fields.\n       When no cols key is included, function will get all fields.\n       \n       var config = {\n         deName: \"Data Extension Name\",\n         cols: [\"EmailAddress\", \"SubscriberKey\"]\n         filter: {\n           Property: \"EmailAddress\",\n           SimpleOperator: \"isNotNull\",\n           Value: \"\"\n         },\n         opts: {\n           BatchSize: 10\n         }\n       };\n       \n    */\n    fn.getDERecords = function (config, fns) {\n\n      var deConfig = {\n        soapObjName: \"DataExtensionObject[\" + config.dataExtensionKey + \"]\"\n      };\n\n      deConfig.cols = config.cols.length > 0 ? config.cols : fns.utils.getFieldNames(config.dataExtensionKey);\n      if (config.filter) { deConfig.filter = config.filter; };\n      if (config.opts) { deConfig.opts = config.opts; };\n\n      var deRecords = fns.wsProxy.retrieve(deConfig);\n      return deRecords;\n    };\n\n\n\n\n    /***********************************************\n    *\n    *   function getFieldNames()\n    *   Gets all columns from a SOAP Object\n    *\n    *    @peram {deName} Name of DataExtension to get columns\n    *\n    *    @output {array} array of fields\n    *\n    ***********************************************/\n\n    fn.getFieldNames = function (dataExtensionKey) {\n      var de = DataExtension.Init(dataExtensionKey);\n      var fields = de.Fields.Retrieve();\n\n      fields.sort(function (a, b) { return (a.Ordinal > b.Ordinal) ? 1 : -1 });\n\n      var out = [];\n\n      for (k in fields) {\n        out = out.concat(fields[k].Name);\n      }\n\n      return out;\n\n    } //End retrieveFieldNames\n\n\n    /***********************************************\n    *\n    *   function formatResult()\n    *   Takes Objects that are Name/Value pairs {Name: \"Key\", Value: \"Value\"} and\n    *   normalizes them to a standard JSON object {key: \"value\"}\n    *\n    *    @peram {arr} array to normalize\n    *    @peram {prop} property key of Array\n    *\n    *    @output Array of normalized JSON object\n    *\n    ***********************************************/\n    fn.formatResult = function (arr, prop) {\n      var results = [];\n      for (var i = 0; i < arr.length; i++) {\n        var result_list = arr[i][prop];\n        var obj = {};\n        for (k in result_list) {\n          var key = result_list[k].Name;\n          var val = result_list[k].Value\n          if (key.indexOf(\"_\") != 0) obj[key] = val;\n        }\n        results.push(obj);\n      }\n      return results;\n    };\n\n\n    return fn\n  }\n\n</script>",
        "id": 107940,
        "customerKey": "dadb2954-0bef-4859-b8bb-3570a5e76831"
      }
    ]
  }
}